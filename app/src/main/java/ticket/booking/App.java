/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.service.UserBookingService;
import ticket.booking.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;
import java.sql.Time;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import  java.util.UUID;

public class App {


    public String getGreeting(){
        return "Hello from train Booking App!";
    }

    public static  void main(String[] args){
        System.out.println("Running Train booking System");

        Scanner sc = new Scanner(System.in);
        int option = 0;
        UserBookingService userBookingService;
        try{
            userBookingService = new UserBookingService();
        }catch (IOException ex){
            System.out.println("There is something wrong"+ex.getMessage());
            return;
        }

        while(option!=7){
            System.out.println("Choose option");
            System.out.println("1.Signup");
            System.out.println("2.Login");
            System.out.println("3.Fetch Booking");
            System.out.println("4.Search train");
            System.out.println("5.Book a seat");
            System.out.println("6.Cancel my booking");
            System.out.println("7.Exit the App");

            option = sc.nextInt();
            Train trainSelectedForBooking = new Train();
            switch(option) {
                case 1:
                    System.out.println("Enter the username to signup");
                    String nameToSignUp = sc.next();
                    System.out.println("Enter the Password to signup");
                    String PasswordToSignUp = sc.next();
                    User userToSignup = new User(nameToSignUp,PasswordToSignUp,
                            UserServiceUtil.hashPassword(PasswordToSignUp),
                            new ArrayList<>(), UUID.randomUUID().toString());
                    userBookingService.signUp(userToSignup);
                    break;

                case 2:
                    System.out.println("Enter the username to Login");
                    String nameToLogin = sc.next();
                    System.out.println("Enter the Password to signup");
                    String PasswordToLogin = sc.next();
                    User userToLogin = new User(nameToLogin, PasswordToLogin,
                            UserServiceUtil.hashPassword(PasswordToLogin),
                            new ArrayList<>(), UUID.randomUUID().toString());
                    try {
                        userBookingService = new UserBookingService(userToLogin);
                    } catch (IOException ex) {
                        return;
                    }

                    break;

                case 3:
                    System.out.println("Fetching your booking");
                    userBookingService.fetchBooking();
                    break;

                case 4:
                    System.out.println("Type your source station");
                    String source = sc.next();
                    System.out.println("Type your destination station");
                    String dest = sc.next();
                    List<Train>trains = userBookingService.getTrains(source,dest);
                    int index = 1;
                    for(Train t: trains){
                        System.out.println(index+"Train id :"+t.getTrainId());
                        for(Map.Entry<String,String>entry:t.getStationTimes().entrySet()){
                            System.out.println("station"+entry.getKey()+"time"+entry.getValue());
                        }
                    }
                    System.out.println("Select a train by typing 1,2,3,.....");
                    trainSelectedForBooking = trains.get(sc.nextInt());
                    break;

                case 5:
                    System.out.println("Select a seat of these seats");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);
                    for(List<Integer> row: seats){
                        for(Integer val:row){
                            System.out.println(val+" ");
                        }
                        System.out.println();
                    }
                    System.out.println("Select the seat by typing the row and colume");
                    System.out.println("Enter the row ");
                    int row = sc.nextInt();
                    System.out.println("Enter the colume");
                    int col = sc.nextInt();
                    System.out.println("Booking your seat ...");
                    Boolean booked = userBookingService.bookTrainSeat(trainSelectedForBooking,row,col);
                    if (booked.equals(Boolean.TRUE)) {
                        System.out.println("Booked ! Enjoy your journy");
                    }else{
                        System.out.println("can't book this seat");
                    }
                    break;
                default:
                    break;

                }
            }

        }
    }




